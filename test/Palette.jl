using Omics

using Test: @test

# ----------------------------------------------------------------------------------------------- #

# ---- #

const RG_ = Omics.Palette.make(["#ff0000", "#00ff00", "#0000ff"])

# ---- #

@test Omics.Palette.pick(Float64[]) === Omics.Palette.bwr

for (uc, re) in ((1, Omics.Palette.MO), (2, Omics.Palette.BI), (3, Omics.Palette.CA))

    @test Omics.Palette.pick(rand(Int, uc)) === re

end

# ---- #

for (nu, re) in (
    # Indexed.
    (1, "#ff0000"),
    (2, "#00ff00"),
    (3, "#0000ff"),
    # Normalized between 0 and 1.
    (-Inf, "#ff0000"),
    (-0.1, "#ff0000"),
    (0.0, "#ff0000"),
    (0.01, "#fa0500"),
    (0.5, "#00ff00"),
    (0.99, "#0005fa"),
    (1.0, "#0000ff"),
    (1.1, "#0000ff"),
    (Inf, "#0000ff"),
    # Normalized between the extrema.
    ([NaN], ["#00ff00"]),
    ([-1], ["#00ff00"]),
    ([0], ["#00ff00"]),
    ([4], ["#00ff00"]),
    (1:3, ["#ff0000", "#00ff00", "#0000ff"]),
    (1:4, ["#ff0000", "#55aa00", "#00aa55", "#0000ff"]),
)

    @test Omics.Palette.color(nu, RG_) == re

end

# ---- #

for (he_, re) in (
    (["#000001"], [(0, "#000001"), (1, "#000001")]),
    (["#000001", "#000002"], [(0.0, "#000001"), (1.0, "#000002")]),
    (
        ["#000001", "#000002", "#000003"],
        [(0.0, "#000001"), (0.5, "#000002"), (1.0, "#000003")],
    ),
    (
        ["#000001", "#000002", "#000003", "#000004"],
        [
            (0.0, "#000001"),
            (0.3333333333333333, "#000002"),
            (0.6666666666666666, "#000003"),
            (1.0, "#000004"),
        ],
    ),
    (
        ["#000001", "#000002", "#000003", "#000004", "#000005"],
        [
            (0.0, "#000001"),
            (0.25, "#000002"),
            (0.5, "#000003"),
            (0.75, "#000004"),
            (1.0, "#000005"),
        ],
    ),
    (
        ["#000001", "#000002", "#000003", "#000004", "#000005", "#000006"],
        [
            (0.0, "#000001"),
            (0.2, "#000002"),
            (0.4, "#000003"),
            (0.6, "#000004"),
            (0.8, "#000005"),
            (1.0, "#000006"),
        ],
    ),
)

    rg_ = Omics.Palette.make(he_)

    @test Omics.Palette.fractionate(rg_) == re

    # 179.243 ns (8 allocations: 392 bytes)
    # 379.063 ns (14 allocations: 624 bytes)
    # 527.562 ns (20 allocations: 888 bytes)
    # 661.012 ns (26 allocations: 1.11 KiB)
    # 801.646 ns (32 allocations: 1.37 KiB)
    # 930.129 ns (38 allocations: 1.61 KiB)
    #@btime Omics.Palette.fractionate($rg_)

end
